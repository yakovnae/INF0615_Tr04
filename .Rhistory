count<-0
for (j in documentos){
if (is.element(i,j))
count<-count+1
}
cbind(IDF,c(log(length(documentos)/count)))
}
IDF<-c(
count<-0
C
IDF<-c()
for (i in dic){
count<-0
for (j in documentos){
if (is.element(i,j))
count<-count+1
}
cbind(IDF,c(log(length(documentos)/count)))
}
IDF
IDF<-c()
for (i in dic){
count<-0
for (j in documentos){
if (is.element(i,j))
count<-count+1
}
IDF<-cbind(IDF,c(log(length(documentos)/count)))
}
IDF
documentos <- list('D1'=c('A','B','C'),
'D2'=c('B','B','A'),
'D3'=c('A','C','D'))
#calculando a lista invertida
CalcularListaInvertida(documentos)
dic<-unique(unlist(c,documentos))
IDF<-c()
for (i in dic){
count<-0
for (j in documentos){
if (is.element(i,j))
count<-count+1
}
IDF<-cbind(IDF,c(log(length(documentos)/count)))
}
IDF
dic
documentos <- list('D1'=c('A','B','C'),
'D2'=c('B','B','A'),
'D3'=c('A','C','D'))
dic<-unique(unlist(c,documentos))
documentos <- list('D1'=c('A','B','C'),
'D2'=c('B','B','A'),
'D3'=c('A','C','D'))
#calculando a lista invertida
CalcularListaInvertida(documentos)
dic<-unique(unlist(documentos))
IDF<-c()
dic
for (i in dic){
count<-0
for (j in documentos){
if (is.element(i,j))
count<-count+1
}
IDF<-cbind(IDF,c(log(length(documentos)/count)))
}
IDF
IDF
D<-list()
for (i in documentos){
for (j in 1:length(dic){
print(tmp)
D<-list()
for (i in documentos){
for (j in 1:length(dic)
tmp<-cbind(tmp,IDF(j)*sum(is.element(i,dic(j))))
print(tmp)
}
for (i in documentos)
c(sum(is.element))
union(documentos$D1,)
IDF
D<-list()
for (i in documentos){
for (j in 1:length(dic)
tmp<-cbind(tmp,IDF(j)*sum(is.element(i,dic(j))))
print(tmp)
}
IDF
D<-list()
for (i in documentos){
for (j in 1:length(dic){
tmp<-cbind(tmp,IDF(j)*sum(is.element(i,dic(j))))
}
print(tmp)
}
IDF
D<-list()
for (i in documentos){
tmp<-c()
for (j in 1:length(dic)){
tmp<-cbind(tmp,IDF(j)*sum(is.element(i,dic(j))))
}
print(tmp)
}
print(IDF)
D<-list()
for (i in documentos){
tmp<-c()
for (j in 1:length(dic)){
tmp<-cbind(tmp,IDF[j]*sum(is.element(i,dic[j])))
}
print(tmp)
}
D<-list()
for (i in documentos){
tmp<-c()
for (j in 1:length(dic)){
tmp<-cbind(tmp,IDF[j]*sum(is.element(i,dic[j])))
}
D<-cbind(D,tmp)
}
D
D<-list(NULL,4)
D
documentos$1
documentos[1]
documentos[[1]]
print(IDF)
D<-list(NULL,4)
for (i in 1:length(documentos){
for (j in 1:length(dic)){
tmp<-cbind(tmp,IDF[j]*sum(is.element(documentos[[i]],dic[j])))
}
print(IDF)
D<-list(NULL,4)
for (i in 1:length(documentos){
for (j in 1:length(dic)){
tmp<-cbind(tmp,IDF[j]*sum(is.element(documentos[i],dic[j])))
}
D[i]<-tmp
print(IDF)
D<-list(NULL,4)
for (i in 1:length(documentos){
for (j in 1:length(dic)){
tmp<-cbind(tmp,IDF[j]*sum(is.element(documentos[i],dic[j])))
}
D[[i]<-tmp
}
print(IDF)
D<-list()
for (i in documentos){
tmp<-c()
for (j in 1:length(dic)){
tmp<-cbind(tmp,IDF[j]*sum(is.element(i,dic[j])))
}
print(tmp)
}
library(OpenImageR)
install.packages("OpenImageR")
install.package("OpenImageR")
installed.packages("OpenImageR")
install.packages("OpenImageR")
install.packages("OpenImageR")
rm(list=ls())
library(wvtool)
library(OpenImageR)
setwd("~/Dropbox/10_Venturus/MDC/201804_INF-0611/doc/aula4")
rm(list=ls())
#dados do descritor 1
ID <- 1:20
X1 <- c(16,16,13,12,17,11,11,11,10,14,2,7,5,3,10,9,4,4,2,4)
Y1 <- c(9,19,15,17,10,12,10,17,13,13,7,7,3,2,7,0,7,4,5,6)
descritor1 <- data.frame(id=ID, X=X1, Y=Y1)
consulta1 <- c(12,8)
#dados do descritor 2
ID <- 1:20
X2 <- c(10,18,7,13,17,8,9,9,10,14,10,3,4,9,3,7,7,8,6,7)
Y2 <- c(15,15,14,19,16,14,10,14,12,14,1,10,3,0,6,2,7,10,7,9)
descritor2 <- data.frame(id=ID, X=X2, Y=Y2)
consulta2 <- c(10,10)
#imagens relevantes
IDrel <- c(7,8,9,10,17,18,19,20)
calc_pre_rec<-function(descritor,consulta,IDrel){
N<-nrow(descritor)
d<-rep(NA,N)
for(i in 1:N){
d[i]<-dist(rbind(c(descritor$X[i],descritor$Y[i]),consulta))
}
descritor$d<-d
d<-sort(unique(d))
df<-data.frame()
for (i in d){
p<-descritor[descritor$d<=i,]
t1<-length(intersect(IDrel,p$id))/nrow(p)       #Precision
t2<-length(intersect(IDrel,p$id))/length(IDrel) #Recall
df<-rbind(df,data.frame(i,t1,t2))
}
names(df)<-c("dist","Precision","Recall")
return(df)
}
pr1<-calc_pre_rec(descritor1,consulta1,IDrel)
pr2<-calc_pre_rec(descritor2,consulta2,IDrel)
pr1
install.packages('TSclust',dependencies = T )
########################################
# Tarefa II
# Nome: Yakov Nae
########################################
library(TSclust)
rm(list=ls())
#install.packages('TSclust',dependencies = T )
A <- c(21.7, 21.7, 21.6, 21.6, 21.7, 21.7, 21.7, 21.6, 21.5, 21.5, 21.4, 21.2, 21.2, 21.1, 21.0, 20.9, 20.9, 21.0, 20.9, 20.9, 20.8, 20.7, 20.6, 20.6, 20.5, 20.5, 20.5, 20.5, 20.5, 20.4, 20.3, 20.2, 20.1, 20.0, 20.0, 20.0, 20.0, 19.9, 19.8, 19.8, 19.8, 20.0, 20.3, 20.8, 21.1, 21.7, 22.3, 22.6, 23.0, 23.8, 24.4, 24.8, 24.7, 25.1, 25.8, 26.3, 26.6, 26.5, 27.0, 27.2, 27.6, 27.6, 27.9, 28.1, 28.2, 28.2, 28.6, 29.0, 29.0, 29.1, 29.4, 29.4, 29.5, 29.5, 29.6, 30.1, 30.1, 30.4, 30.2, 30.5, 30.6, 30.4, 30.6, 30.2, 30.4, 30.6, 30.1, 30.2, 30.3, 30.2, 30.3, 30.5, 30.1, 30.0, 30.3, 31.1, 31.2, 31.1, 31.2, 31.3, 31.6, 31.3, 30.8, 30.0, 30.5, 29.9, 29.7, 29.9, 29.2, 28.7, 28.4, 28.2, 26.4, 25.0, 24.4, 23.9, 23.7, 23.7, 23.8, 23.9, 23.9, 23.8, 24.0, 24.1, 24.2, 24.2, 24.1, 24.1, 24.0, 24.0, 24.0, 24.0, 23.9, 23.6, 23.4, 23.4, 23.4, 23.3, 23.2, 23.1, 23.0, 22.9, 22.9, 22.8)
B <- c(21.4, 21.3, 21.3, 20.9, 20.4, 20.0, 19.8, 19.9, 19.9, 19.7, 20.0, 19.8, 19.7, 20.1, 20.1, 19.9, 19.7, 18.8, 19.0, 18.3, 18.0, 17.5, 17.4, 17.5, 17.7, 18.0, 18.0, 17.5, 17.5, 17.7, 18.1, 18.0, 17.9, 17.6, 17.2, 17.3, 17.5, 17.1, 17.2, 17.5, 17.4, 17.7, 18.0, 18.0, 17.8, 17.7, 17.6, 17.9, 19.3, 20.2, 20.6, 21.6, 22.3, 21.7, 21.5, 21.7, 22.2, 22.4, 22.6, 23.1, 23.4, 24.0, 24.1, 24.5, 24.8, 25.0, 25.7, 25.8, 25.8, 26.4, 26.6, 27.0, 26.8, 26.9, 27.0, 27.3, 27.1, 27.8, 28.0, 28.2, 28.2, 27.9, 27.4, 27.2, 27.2, 27.3, 27.2, 27.1, 27.4, 27.7, 27.4, 27.3, 27.2, 27.7, 27.8, 28.2, 28.0, 27.8, 27.7, 27.7, 27.7, 27.8, 27.5, 26.6, 25.7, 25.0, 24.2, 23.5, 23.2, 22.9, 22.5, 22.3, 22.0, 21.6, 21.3, 21.0, 20.8, 20.4, 20.3, 20.0, 19.7, 19.5, 19.3, 19.1, 19.0, 18.9, 18.7, 18.6, 18.5, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.3, 18.4, 18.3)
pre_process<-function(ts_v,M,L){
t<-c()
N<-length(ts_v)/M
for (i in 1:M){
l<-(1+(i-1)*N)
r<-i*N
t<-cbind(t,mean(A[l:r]))
}
t<-c(t)
t<-(t-mean(t))/sqrt(var(t))
lu<-c(-Inf,-.67,0,.67,Inf)
s<-rep(NA,length(t))
for (i in 1:(length(lu)-1))
s[t>lu[i] & t<lu[i+1]]=LETTERS[i]
return(data.frame(t,s))
}
x<-pre_process(A,24,4)
x
########################################
# Tarefa II
# Nome: Yakov Nae
########################################
library(TSclust)
rm(list=ls())
#install.packages('TSclust',dependencies = T )
A <- c(21.7, 21.7, 21.6, 21.6, 21.7, 21.7, 21.7, 21.6, 21.5, 21.5, 21.4, 21.2, 21.2, 21.1, 21.0, 20.9, 20.9, 21.0, 20.9, 20.9, 20.8, 20.7, 20.6, 20.6, 20.5, 20.5, 20.5, 20.5, 20.5, 20.4, 20.3, 20.2, 20.1, 20.0, 20.0, 20.0, 20.0, 19.9, 19.8, 19.8, 19.8, 20.0, 20.3, 20.8, 21.1, 21.7, 22.3, 22.6, 23.0, 23.8, 24.4, 24.8, 24.7, 25.1, 25.8, 26.3, 26.6, 26.5, 27.0, 27.2, 27.6, 27.6, 27.9, 28.1, 28.2, 28.2, 28.6, 29.0, 29.0, 29.1, 29.4, 29.4, 29.5, 29.5, 29.6, 30.1, 30.1, 30.4, 30.2, 30.5, 30.6, 30.4, 30.6, 30.2, 30.4, 30.6, 30.1, 30.2, 30.3, 30.2, 30.3, 30.5, 30.1, 30.0, 30.3, 31.1, 31.2, 31.1, 31.2, 31.3, 31.6, 31.3, 30.8, 30.0, 30.5, 29.9, 29.7, 29.9, 29.2, 28.7, 28.4, 28.2, 26.4, 25.0, 24.4, 23.9, 23.7, 23.7, 23.8, 23.9, 23.9, 23.8, 24.0, 24.1, 24.2, 24.2, 24.1, 24.1, 24.0, 24.0, 24.0, 24.0, 23.9, 23.6, 23.4, 23.4, 23.4, 23.3, 23.2, 23.1, 23.0, 22.9, 22.9, 22.8)
B <- c(21.4, 21.3, 21.3, 20.9, 20.4, 20.0, 19.8, 19.9, 19.9, 19.7, 20.0, 19.8, 19.7, 20.1, 20.1, 19.9, 19.7, 18.8, 19.0, 18.3, 18.0, 17.5, 17.4, 17.5, 17.7, 18.0, 18.0, 17.5, 17.5, 17.7, 18.1, 18.0, 17.9, 17.6, 17.2, 17.3, 17.5, 17.1, 17.2, 17.5, 17.4, 17.7, 18.0, 18.0, 17.8, 17.7, 17.6, 17.9, 19.3, 20.2, 20.6, 21.6, 22.3, 21.7, 21.5, 21.7, 22.2, 22.4, 22.6, 23.1, 23.4, 24.0, 24.1, 24.5, 24.8, 25.0, 25.7, 25.8, 25.8, 26.4, 26.6, 27.0, 26.8, 26.9, 27.0, 27.3, 27.1, 27.8, 28.0, 28.2, 28.2, 27.9, 27.4, 27.2, 27.2, 27.3, 27.2, 27.1, 27.4, 27.7, 27.4, 27.3, 27.2, 27.7, 27.8, 28.2, 28.0, 27.8, 27.7, 27.7, 27.7, 27.8, 27.5, 26.6, 25.7, 25.0, 24.2, 23.5, 23.2, 22.9, 22.5, 22.3, 22.0, 21.6, 21.3, 21.0, 20.8, 20.4, 20.3, 20.0, 19.7, 19.5, 19.3, 19.1, 19.0, 18.9, 18.7, 18.6, 18.5, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.3, 18.4, 18.3)
pre_process<-function(ts_v,M,L){
t<-c()
N<-length(ts_v)/M
#Downsampling using mean
for (i in 1:M){
l<-(1+(i-1)*N)
r<-i*N
t<-cbind(t,mean(A[l:r]))
}
#Normalization -> to fit a normal distribution with mean 0 and sd 1
t<-(t-mean(t))/sd(t)
lu<-c(-Inf,-.67,0,.67,Inf)
s<-rep(NA,length(t))
for (i in 1:(length(lu)-1))
s[t>lu[i] & t<lu[i+1]]=LETTERS[i]
return(data.frame(t,s))
}
x<-pre_process(A,24,4)
x
x
pre_process<-function(ts_v,M,L){
t<-c()
N<-length(ts_v)/M
#Downsampling using mean
for (i in 1:M){
l<-(1+(i-1)*N)
r<-i*N
t<-cbind(t,mean(A[l:r]))
}
#Normalization -> to fit a normal distribution with mean 0 and sd 1
t<-(t-mean(t))/sd(t)
lu<-c(-Inf,-.67,0,.67,Inf)
s<-rep(NA,length(t))
for (i in 1:(length(lu)-1))
s[t>lu[i] & t<lu[i+1]]=LETTERS[i]
return(data.frame(t=t,s=s))
}
x<-pre_process(A,24,4)
x
pre_process<-function(ts_v,M,L){
t<-c()
N<-length(ts_v)/M
#Downsampling using mean
for (i in 1:M){
l<-(1+(i-1)*N)
r<-i*N
t<-cbind(t,mean(A[l:r]))
}
#Normalization -> to fit a normal distribution with mean 0 and sd 1
t<-(t-mean(t))/sd(t)
lu<-c(-Inf,-.67,0,.67,Inf)
s<-rep(NA,length(t))
for (i in 1:(length(lu)-1))
s[t>lu[i] & t<lu[i+1]]=LETTERS[i]
return(t)
}
x<-pre_process(A,24,4)
x
pre_process<-function(ts_v,M,L){
t_v<-c()
N<-length(ts_v)/M
#Downsampling using mean
for (i in 1:M){
l<-(1+(i-1)*N)
r<-i*N
t_v<-cbind(t_v,mean(A[l:r]))
}
#Normalization -> to fit a normal distribution with mean 0 and sd 1
t_v<-(t_v-mean(t_v))/sd(t_v)
lu<-c(-Inf,-.67,0,.67,Inf)
s<-rep(NA,length(t_v))
for (i in 1:(length(lu)-1))
s[t_v>lu[i] & t_v<lu[i+1]]=LETTERS[i]
return(data.frame(t_v=t_v,s=s))
}
x<-pre_process(A,24,4)
x
pre_process<-function(ts_v,M,L){
t_v<-c()
N<-length(ts_v)/M
#Downsampling using mean
for (i in 1:M){
l<-(1+(i-1)*N)
r<-i*N
t_v<-cbind(t_v,mean(A[l:r]))
}
#Normalization -> to fit a normal distribution with mean 0 and sd 1
t_v<-(t_v-mean(t_v))/sd(t_v)
lu<-c(-Inf,-.67,0,.67,Inf)
s<-rep(NA,length(t_v))
for (i in 1:(length(lu)-1))
s[t_v>lu[i] & t_v<lu[i+1]]=LETTERS[i]
return(data.frame(t_v=t(t_v),s=s))
}
x<-pre_process(A,24,4)
x
SAX.plot(ts(A), w=24, alpha=4, col.ser=rainbow(ncol(as.matrix(A))))
########################################
# Tarefa II
# Nome: Yakov Nae
########################################
library(TSclust)
install.packages('TSclust',dependencies = T )
qnorm(0:4/4)
########################################
# Tarefa II
# Nome: Yakov Nae
########################################
library(TSclust)
rm(list=ls())
#DATA
A <- c(21.7, 21.7, 21.6, 21.6, 21.7, 21.7, 21.7, 21.6, 21.5, 21.5, 21.4, 21.2, 21.2, 21.1, 21.0, 20.9, 20.9, 21.0, 20.9, 20.9, 20.8, 20.7, 20.6, 20.6, 20.5, 20.5, 20.5, 20.5, 20.5, 20.4, 20.3, 20.2, 20.1, 20.0, 20.0, 20.0, 20.0, 19.9, 19.8, 19.8, 19.8, 20.0, 20.3, 20.8, 21.1, 21.7, 22.3, 22.6, 23.0, 23.8, 24.4, 24.8, 24.7, 25.1, 25.8, 26.3, 26.6, 26.5, 27.0, 27.2, 27.6, 27.6, 27.9, 28.1, 28.2, 28.2, 28.6, 29.0, 29.0, 29.1, 29.4, 29.4, 29.5, 29.5, 29.6, 30.1, 30.1, 30.4, 30.2, 30.5, 30.6, 30.4, 30.6, 30.2, 30.4, 30.6, 30.1, 30.2, 30.3, 30.2, 30.3, 30.5, 30.1, 30.0, 30.3, 31.1, 31.2, 31.1, 31.2, 31.3, 31.6, 31.3, 30.8, 30.0, 30.5, 29.9, 29.7, 29.9, 29.2, 28.7, 28.4, 28.2, 26.4, 25.0, 24.4, 23.9, 23.7, 23.7, 23.8, 23.9, 23.9, 23.8, 24.0, 24.1, 24.2, 24.2, 24.1, 24.1, 24.0, 24.0, 24.0, 24.0, 23.9, 23.6, 23.4, 23.4, 23.4, 23.3, 23.2, 23.1, 23.0, 22.9, 22.9, 22.8)
B <- c(21.4, 21.3, 21.3, 20.9, 20.4, 20.0, 19.8, 19.9, 19.9, 19.7, 20.0, 19.8, 19.7, 20.1, 20.1, 19.9, 19.7, 18.8, 19.0, 18.3, 18.0, 17.5, 17.4, 17.5, 17.7, 18.0, 18.0, 17.5, 17.5, 17.7, 18.1, 18.0, 17.9, 17.6, 17.2, 17.3, 17.5, 17.1, 17.2, 17.5, 17.4, 17.7, 18.0, 18.0, 17.8, 17.7, 17.6, 17.9, 19.3, 20.2, 20.6, 21.6, 22.3, 21.7, 21.5, 21.7, 22.2, 22.4, 22.6, 23.1, 23.4, 24.0, 24.1, 24.5, 24.8, 25.0, 25.7, 25.8, 25.8, 26.4, 26.6, 27.0, 26.8, 26.9, 27.0, 27.3, 27.1, 27.8, 28.0, 28.2, 28.2, 27.9, 27.4, 27.2, 27.2, 27.3, 27.2, 27.1, 27.4, 27.7, 27.4, 27.3, 27.2, 27.7, 27.8, 28.2, 28.0, 27.8, 27.7, 27.7, 27.7, 27.8, 27.5, 26.6, 25.7, 25.0, 24.2, 23.5, 23.2, 22.9, 22.5, 22.3, 22.0, 21.6, 21.3, 21.0, 20.8, 20.4, 20.3, 20.0, 19.7, 19.5, 19.3, 19.1, 19.0, 18.9, 18.7, 18.6, 18.5, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.3, 18.4, 18.3)
pre_process<-function(ts_v,M,L){
#ts_v - Time Series Vector
#M    - Number of samples
#L    - Size of dictionay
t_v<-c()
N<-length(ts_v)/M
#Downsampling using mean
for (i in 1:M){
l<-(1+(i-1)*N)
r<-i*N
t_v<-cbind(t_v,mean(A[l:r]))
}
#Normalization -> to fit a normal distribution with mean 0 and sd 1
t_v<-(t_v-mean(t_v))/sd(t_v)
lu<-qnorm(0:L/L)
s<-rep(NA,length(t_v))
#Transforming values to letters
for (i in 1:(length(lu)-1))
s[t_v>lu[i] & t_v<lu[i+1]]=LETTERS[i]
return(data.frame(t_v=t(t_v),s=s))
}
x<-pre_process(A,24,4)
x
SAX.plot(ts(A), w=24, alpha=4, col.ser=rainbow(ncol(as.matrix(A))))
SAX.plot(B, w=24, alpha=4, col.ser=rainbow(ncol(as.matrix(A))))
########################################
# Tarefa II
# Nome: Yakov Nae
########################################
library(TSclust)
rm(list=ls())
#DATA
A <- c(21.7, 21.7, 21.6, 21.6, 21.7, 21.7, 21.7, 21.6, 21.5, 21.5, 21.4, 21.2, 21.2, 21.1, 21.0, 20.9, 20.9, 21.0, 20.9, 20.9, 20.8, 20.7, 20.6, 20.6, 20.5, 20.5, 20.5, 20.5, 20.5, 20.4, 20.3, 20.2, 20.1, 20.0, 20.0, 20.0, 20.0, 19.9, 19.8, 19.8, 19.8, 20.0, 20.3, 20.8, 21.1, 21.7, 22.3, 22.6, 23.0, 23.8, 24.4, 24.8, 24.7, 25.1, 25.8, 26.3, 26.6, 26.5, 27.0, 27.2, 27.6, 27.6, 27.9, 28.1, 28.2, 28.2, 28.6, 29.0, 29.0, 29.1, 29.4, 29.4, 29.5, 29.5, 29.6, 30.1, 30.1, 30.4, 30.2, 30.5, 30.6, 30.4, 30.6, 30.2, 30.4, 30.6, 30.1, 30.2, 30.3, 30.2, 30.3, 30.5, 30.1, 30.0, 30.3, 31.1, 31.2, 31.1, 31.2, 31.3, 31.6, 31.3, 30.8, 30.0, 30.5, 29.9, 29.7, 29.9, 29.2, 28.7, 28.4, 28.2, 26.4, 25.0, 24.4, 23.9, 23.7, 23.7, 23.8, 23.9, 23.9, 23.8, 24.0, 24.1, 24.2, 24.2, 24.1, 24.1, 24.0, 24.0, 24.0, 24.0, 23.9, 23.6, 23.4, 23.4, 23.4, 23.3, 23.2, 23.1, 23.0, 22.9, 22.9, 22.8)
B <- c(21.4, 21.3, 21.3, 20.9, 20.4, 20.0, 19.8, 19.9, 19.9, 19.7, 20.0, 19.8, 19.7, 20.1, 20.1, 19.9, 19.7, 18.8, 19.0, 18.3, 18.0, 17.5, 17.4, 17.5, 17.7, 18.0, 18.0, 17.5, 17.5, 17.7, 18.1, 18.0, 17.9, 17.6, 17.2, 17.3, 17.5, 17.1, 17.2, 17.5, 17.4, 17.7, 18.0, 18.0, 17.8, 17.7, 17.6, 17.9, 19.3, 20.2, 20.6, 21.6, 22.3, 21.7, 21.5, 21.7, 22.2, 22.4, 22.6, 23.1, 23.4, 24.0, 24.1, 24.5, 24.8, 25.0, 25.7, 25.8, 25.8, 26.4, 26.6, 27.0, 26.8, 26.9, 27.0, 27.3, 27.1, 27.8, 28.0, 28.2, 28.2, 27.9, 27.4, 27.2, 27.2, 27.3, 27.2, 27.1, 27.4, 27.7, 27.4, 27.3, 27.2, 27.7, 27.8, 28.2, 28.0, 27.8, 27.7, 27.7, 27.7, 27.8, 27.5, 26.6, 25.7, 25.0, 24.2, 23.5, 23.2, 22.9, 22.5, 22.3, 22.0, 21.6, 21.3, 21.0, 20.8, 20.4, 20.3, 20.0, 19.7, 19.5, 19.3, 19.1, 19.0, 18.9, 18.7, 18.6, 18.5, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.3, 18.4, 18.3)
pre_process<-function(ts_v,M,L){
#ts_v - Time Series Vector
#M    - Number of samples
#L    - Size of dictionay
t_v<-c()
N<-length(ts_v)/M
#Downsampling using mean
for (i in 1:M){
l<-(1+(i-1)*N)
r<-i*N
t_v<-cbind(t_v,mean(A[l:r]))
}
#Normalization -> to fit a normal distribution with mean 0 and sd 1
t_v<-(t_v-mean(t_v))/sd(t_v)
lu<-qnorm(0:L/L)
s<-rep(NA,length(t_v))
#Transforming values to letters
for (i in 1:(length(lu)-1))
s[t_v>lu[i] & t_v<lu[i+1]]=LETTERS[i]
return(data.frame(t_v=t(t_v),s=s))
}
x<-pre_process(A,24,4)
x
SAX.plot(ts(A), w=24, alpha=4, col.ser=rainbow(ncol(as.matrix(A))))
########################################
# Tarefa II
# Nome: Yakov Nae
########################################
#install.packages('TSclust', dependencies = T )
library(TSclust)
library(ggplot2)
rm(list=ls())
pre_process<-function(t_in,n,w){
#t_in - Time Series Vector
#n    - Number of samples
#w    - Size of dictionay
t_v<-c()
N<-length(t_in)/n
#Downsampling using mean
for (i in 1:n){
l<-(1+(i-1)*N)
r<-i*N
t_v<-cbind(t_v,mean(t_in[l:r]))
}
#Normalization -> to fit a normal distribution with mean 0 and sd 1
t_v<-(t_v-mean(t_v))/sd(t_v)
beta<-qnorm(0:w/w)
s<-rep(NA,length(t_v))
#Transforming values to letters
for (i in 1:(length(beta)-1))
s[t_v>beta[i] & t_v<=beta[i+1]]=LETTERS[i]
return(data.frame(t_v=t(t_v),s=s))
}
generate_diff_table<-function(L){
beta<-qnorm(0:L/L)
beta<-beta[2:(L)]
tb<-matrix(NA,ncol = L, nrow = L)
for (r in 1:L)
for (c in 1:L){
if (abs(r-c)<=1){
tb[r,c]<-0
}else{
tb[r,c]<-beta[max(r,c)-1] - beta[min(r,c)]
}
}
colnames(tb)<-LETTERS[1:L]
rownames(tb)<-LETTERS[1:L]
return(tb)
}
calc_mindist<-function(A,B,w,n){
n<-length(A)/n
difT<-generate_diff_table(w)
N=length(A)
dist<-0
for (i in 1:N)
dist<-dist+(difT[A[i,2],B[i,2]])^2
dist<-sqrt(n/w)*sqrt(dist)
return(dist)
}
#DATA
A <- c(21.7, 21.7, 21.6, 21.6, 21.7, 21.7, 21.7, 21.6, 21.5, 21.5, 21.4, 21.2, 21.2, 21.1, 21.0, 20.9, 20.9, 21.0, 20.9, 20.9, 20.8, 20.7, 20.6, 20.6, 20.5, 20.5, 20.5, 20.5, 20.5, 20.4, 20.3, 20.2, 20.1, 20.0, 20.0, 20.0, 20.0, 19.9, 19.8, 19.8, 19.8, 20.0, 20.3, 20.8, 21.1, 21.7, 22.3, 22.6, 23.0, 23.8, 24.4, 24.8, 24.7, 25.1, 25.8, 26.3, 26.6, 26.5, 27.0, 27.2, 27.6, 27.6, 27.9, 28.1, 28.2, 28.2, 28.6, 29.0, 29.0, 29.1, 29.4, 29.4, 29.5, 29.5, 29.6, 30.1, 30.1, 30.4, 30.2, 30.5, 30.6, 30.4, 30.6, 30.2, 30.4, 30.6, 30.1, 30.2, 30.3, 30.2, 30.3, 30.5, 30.1, 30.0, 30.3, 31.1, 31.2, 31.1, 31.2, 31.3, 31.6, 31.3, 30.8, 30.0, 30.5, 29.9, 29.7, 29.9, 29.2, 28.7, 28.4, 28.2, 26.4, 25.0, 24.4, 23.9, 23.7, 23.7, 23.8, 23.9, 23.9, 23.8, 24.0, 24.1, 24.2, 24.2, 24.1, 24.1, 24.0, 24.0, 24.0, 24.0, 23.9, 23.6, 23.4, 23.4, 23.4, 23.3, 23.2, 23.1, 23.0, 22.9, 22.9, 22.8)
B <- c(21.4, 21.3, 21.3, 20.9, 20.4, 20.0, 19.8, 19.9, 19.9, 19.7, 20.0, 19.8, 19.7, 20.1, 20.1, 19.9, 19.7, 18.8, 19.0, 18.3, 18.0, 17.5, 17.4, 17.5, 17.7, 18.0, 18.0, 17.5, 17.5, 17.7, 18.1, 18.0, 17.9, 17.6, 17.2, 17.3, 17.5, 17.1, 17.2, 17.5, 17.4, 17.7, 18.0, 18.0, 17.8, 17.7, 17.6, 17.9, 19.3, 20.2, 20.6, 21.6, 22.3, 21.7, 21.5, 21.7, 22.2, 22.4, 22.6, 23.1, 23.4, 24.0, 24.1, 24.5, 24.8, 25.0, 25.7, 25.8, 25.8, 26.4, 26.6, 27.0, 26.8, 26.9, 27.0, 27.3, 27.1, 27.8, 28.0, 28.2, 28.2, 27.9, 27.4, 27.2, 27.2, 27.3, 27.2, 27.1, 27.4, 27.7, 27.4, 27.3, 27.2, 27.7, 27.8, 28.2, 28.0, 27.8, 27.7, 27.7, 27.7, 27.8, 27.5, 26.6, 25.7, 25.0, 24.2, 23.5, 23.2, 22.9, 22.5, 22.3, 22.0, 21.6, 21.3, 21.0, 20.8, 20.4, 20.3, 20.0, 19.7, 19.5, 19.3, 19.1, 19.0, 18.9, 18.7, 18.6, 18.5, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.4, 18.4, 18.4, 18.4, 18.3, 18.3, 18.3, 18.4, 18.3)
Nin<-24
for (Win in 4:7){
A1<-pre_process(A,Nin,Win)
B1<-pre_process(B,Nin,Win)
print(calc_mindist(A1,B1,Win,Nin))
}
for (Win in 4:7)
print(diss.MINDIST.SAX(A, B, 24, alpha=Win, plot=F))
Win<-8
A1<-pre_process(A,Nin,Win)
B1<-pre_process(B,Nin,Win)
N<-length(A)/Nin
d<-data.frame(A=rep(A1[,1],each=N),B=rep(B1[,1],each=N))
ggplot(d) +
geom_line(aes(x=1:length(A), y = d$A, colour = "A"))+
geom_line(aes(x=1:length(A), y = d$B, colour = "B"))+
labs(x="Samples", y="Precision", color="Descriptors:")+
abline(h = c(0,1,-1), col = rainbow(3),
lty = 2)
ggsave('./F2_Quantized.png')
SAX.plot(ts(A), w=Nin, alpha=Win, col.ser=rainbow(ncol(as.matrix(A))))
########################################
# Tarefa II
# Nome: Yakov Nae
########################################
install.packages('TSclust', dependencies = T )
install.packages("cldr", type="binary")
install.packages("arules",dependencies = T)
install.packages("arulesViz",dependencies = T)
remove.packages(pkgs, lib)
?round
round(4.7777,2)
setwd("~/Desktop/MDC/Tr04")
#---> no my data work samples ja soltar o 80% e 20%. chamar o my_data_partition de la mesmo
rm(list=ls())
library(neuralnet)
library(ggplot2)
rm(list=ls())
source("data_path.r")
source("Functions.r")
data_raw <- read.csv(data_path, header=FALSE)
